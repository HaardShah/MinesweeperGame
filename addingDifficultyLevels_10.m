% 1. A board of zeros, which is 9 rows by 9 columns will be displayed to
%    the player.

% 2. Next, player will be asked if to enter "yes" if they are ready and 
%    "no" if they are not ready. If ready, the game will begin. If the
%    player types in no, the program will stop running and will display a short
%    message saying thanks for coming! This will be done using conditional
%    loop.

% 3. The game will then generate a random board in the background, which
%    will not be displayed. In the generated board, "0" will be safe, "1"
%    act like a "mine". This number 1 will be randomly placed within the
%    9x9 game board using the rand function (in conjunction with for loops). 
%    There numbers of "1" the player gets will be dependent on the difficulty
%    level they choose. The difficulty levels will be determined using
%    probability, which will depend on the numbers generated by the rand
%    function. Here, for loops and if (and elseif) conditionals will be
%    used.    

% 4. The player will then be asked to select a row and a column to place
%    their "guess" on what specific place in the 9x9 board is safe, hence
%    they would want to guess that. If their guess lands on a "0", they will
%    be displayed with a message saying "you are safe, continue on your
%    next turn!"

% 5. BUT, if their guess lands on a "1", they will be displayed with a message
%    saying "oh no, you hit a mine!" and then "GAME OVER!". The game will
%    then end and another message will also be displayed again saying
%    "thank you for playing Minesweeper!"

%           Hopeful creator of this game: Haard Shah :-)                 %




% Initially, the workspace and the command window will be cleared. This
% will help clear up any values from previous rounds or help if for whatever
% reason the game  breaks and needs a clear command window for the next round.
clear;
clc;

% The player will be displayed with a short message welcoming them to the game.
% The player will be asked whether they are ready to play Minesweeper.
disp("WELCOME TO MINESWEEPER!");
disp("Please type in yes uf you are ready to play the game, or no to end the game.");
askUser = input("Would you like to play Minesweeper?: ",'s');

% A while loop is being used to "filter" the user's input. They are
% required to either type in yes or no. If they happen to enter something
% like "nah" or "yea", the input will not be accepted, hence player will be
% asked to enter either of only yes or no.
while askUser ~= "yes" && askUser ~= "no"
    askUser = input("Sorry? Please enter either of only 'yes' or 'no': ",'s');
end

% Now an if statement will be used depending on whether the player will
% like to play the game or not. If player says no, the command window will
% clear and they will be displayed with a short message saying "thanks for
% considering checking in!".
if askUser == "no"
    clc;
    disp("Thanks for considering checking in!");

% If the player says yes, the game will proceed. Initially the command
% window will be cleared up and then the some text will be displayed. This
% text will give visual representations of how the game runs. This first 
% visual will give an example of how a board initially would look like.
elseif askUser == "yes"
    clc;
    disp("You will now be presented with an inital Minesweeper game board!");
    disp("The value of 0 represents safe. When you play, the game board will");
    disp("be randomised with 0's and 1's.");
    gameBoard = zeros(9);
    disp(gameBoard);

% Now the example game board will be randomised, and will be shown to the
% player. This will give them an idea of the *highest* difficulty, and at the same
% time, the rules will be continued to be explained with visual representations.
fprintf('\n');
disp("Below, you are displayed with a randomised game board, which you may"); 
disp("expect in your game (if you choose hard difficulty). The '1' acts as"); 
disp("mines, and the '0' acts as safe.You want to guess where the 0's are located.");
randomisedGameBoardEg = randi([0 1],9,9);
disp(randomisedGameBoardEg);

% Now the player will be displayed the levels of difficulty exist in this game.
fprintf("\n");
disp("Now you will be asked to select a difficulty level. Difficulty levels");
disp("are as follows:");
fprintf("\n");
disp("EASY = 1");
disp("MEDIUM = 2");
disp("HARD (like the game board above) = 3");
fprintf("\n");
% The player will be choosed to enter the level of difficulty.
userDifficulty = input("What level difficulty (1,2 or 3) would you like?: ");
    
% The window will again be cleared for an easier viewing experience.
clc;

disp("Your game will begin now!");
disp("You will now be asked to enter your guess, remember, 3 shots.");

realGameBoard = rand(9);

for i = 1:9
    for j =  1:9
        
        if userDifficulty == 1
            if realGameBoard(i,j) > 0 && realGameBoard(i,j) < 0.85
            realGameBoard(i,j) = 0;
            else
            realGameBoard(i,j) = 1;
            end
        elseif userDifficulty == 2
            if realGameBoard(i,j) > 0 && realGameBoard(i,j) < 0.67
            realGameBoard(i,j) = 0;
            else
            realGameBoard(i,j) = 1;
            end
        elseif userDifficulty == 3
            if realGameBoard(i,j) > 0 && realGameBoard(i,j) < 0.50
            realGameBoard(i,j) = 0;
            else
            realGameBoard(i,j) = 1;
            end
            
        end
    end
end

count = 3;
disp("First you will be asked to enter the row, then the column.");
for i = 1:3
    sr = input("Please enter the row: ");
    sc = input("Please enter the column: ");
    
    shot = realGameBoard(sr,sc);
    disp(shot);
    if shot == 1
        disp("Oh no! You hit a mine!");
        disp("GAME OVER.");
        disp("Thank you for playing Minesweeper!");
        break
    elseif shot == 0
        count = count - 1;
        if count == 0
            disp("You won!");
            disp("Thank you for playing Minesweeper!");
            break
        end
        
        disp("You are safe, continue on your next turn!");
    end
    
end
end

